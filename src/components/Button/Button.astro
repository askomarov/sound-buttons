---
import { Icon } from 'astro-icon/components';
import type { HTMLTag, Polymorphic } from 'astro/types';

type Props<Tag extends HTMLTag> = Polymorphic<
  { as: Tag } & {
    text?: string;
    className?: string;
    mods?: string[];
    size?: 'xl' | 'lg' | 'md' | 'sm' | 'xs';
    icon?: string;
    iconPosBefore?: boolean;
    modal?: string;
  }
>;

const {
  as: Tag = 'button',
  className,
  text,
  mods,
  size,
  icon,
  iconPosBefore,
  modal,
  ...props
} = Astro.props;
---

<Tag
  class:list={[
    'button',
    size ? `button--${size}` : '',
    mods?.map((mod: string) => `button--${mod}`),
    className
  ]}
  data-open-modal={modal}
  {...props}
>
  {
    icon && iconPosBefore && (
      <span class="button__icon">
        <Icon name={icon} />
      </span>
    )
  }

  {text ? <span class="button__text" set:html={text} /> : ''}

  {
    icon && !iconPosBefore && (
      <span class="button__icon">
        <Icon name={icon} />
      </span>
    )
  }
</Tag>
